/*!
 * Banquette DependencyInjection v0.0.0 (CommonJS)
 * (c) 2022-2022 Julien Pinto
 * Released under Apache License, Version 2.0
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var a=require("@banquette/exception/_cjs/prod/usage.exception"),e=require("@banquette/utils-type/_cjs/prod/ensure-array"),t=require("@banquette/utils-type/_cjs/prod/is-undefined"),n=function(){function MetadataContainer(){}return MetadataContainer.Set=function(a){MetadataContainer.ObserveTags(a),MetadataContainer.IdentifierMap.set(a.identifier,a),MetadataContainer.KnownMetadata.push(a)},MetadataContainer.Get=function(a){var e=MetadataContainer.IdentifierMap.get(a);if(e)return e;for(var t=0,n=MetadataContainer.KnownMetadata;t<n.length;t++){var r=n[t];if(r.ctor===a)return MetadataContainer.IdentifierMap.get(r.identifier)||null}return null},MetadataContainer.GetOrFail=function(e){var t=MetadataContainer.Get(e);if(null===t)throw new a.UsageException('No injectable found for "'.concat(e.name,'".'));return t},MetadataContainer.GetForTag=function(a){for(var n=[],r=0,i=e.ensureArray(a);r<i.length;r++){var o=i[r];if(!t.isUndefined(MetadataContainer.TagsMap[o]))for(var d=0,M=MetadataContainer.TagsMap[o];d<M.length;d++){var u=M[d];n.indexOf(u)<0&&n.push(u)}}return n},MetadataContainer.GetKnownMetadata=function(){return MetadataContainer.KnownMetadata},MetadataContainer.ObserveTags=function(a){var e=a.tags;Object.defineProperty(a,"tags",{enumerable:!0,configurable:!0,get:function(){return e},set:function(n){for(var r=0,i=n;r<i.length;r++){var o=i[r];e.indexOf(o)<0&&(e.push(o),t.isUndefined(MetadataContainer.TagsMap[o])&&(MetadataContainer.TagsMap[o]=[]),MetadataContainer.TagsMap[o].indexOf(a)<0&&(MetadataContainer.TagsMap[o].push(a),MetadataContainer.TagsVersion=MetadataContainer.TagsVersion+1))}}})},MetadataContainer.KnownMetadata=[],MetadataContainer.IdentifierMap=new WeakMap,MetadataContainer.TagsMap={},MetadataContainer.TagsVersion=0,MetadataContainer}();exports.MetadataContainer=n;
